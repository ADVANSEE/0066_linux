#undef MX6PAD
#undef MX6NAME
#undef MX6

#ifdef FOR_DL_SOLO
#define MX6(a) MX6DL_##a
#define MX6PAD(a) MX6DL_PAD_##a
#define MX6NAME(a) mx6dl_solo_##a
#else
#define MX6(a) MX6Q_##a
#define MX6PAD(a) MX6Q_PAD_##a
#define MX6NAME(a) mx6q_##a
#endif

#define MX6Q_USDHC_PAD_CTRL_22KPU_40OHM_50MHZ	(PAD_CTL_PKE | PAD_CTL_PUE |	\
		PAD_CTL_PUS_22K_UP  | PAD_CTL_SPEED_LOW |		\
		PAD_CTL_DSE_40ohm   | PAD_CTL_SRE_FAST  | PAD_CTL_HYS)

#define MX6Q_USDHC_PAD_CTRL_50MHZ	MX6Q_USDHC_PAD_CTRL
#define MX6Q_PAD_SD4_CLK__USDHC4_CLK	MX6Q_PAD_SD4_CLK__USDHC4_CLK_50MHZ
#define MX6Q_PAD_SD4_CMD__USDHC4_CMD	MX6Q_PAD_SD4_CMD__USDHC4_CMD_50MHZ
#define MX6Q_PAD_SD4_DAT0__USDHC4_DAT0	MX6Q_PAD_SD4_DAT0__USDHC4_DAT0_50MHZ
#define MX6Q_PAD_SD4_DAT1__USDHC4_DAT1	MX6Q_PAD_SD4_DAT1__USDHC4_DAT1_50MHZ
#define MX6Q_PAD_SD4_DAT2__USDHC4_DAT2	MX6Q_PAD_SD4_DAT2__USDHC4_DAT2_50MHZ
#define MX6Q_PAD_SD4_DAT3__USDHC4_DAT3	MX6Q_PAD_SD4_DAT3__USDHC4_DAT3_50MHZ
#define MX6Q_PAD_SD4_DAT4__USDHC4_DAT4	MX6Q_PAD_SD4_DAT4__USDHC4_DAT4_50MHZ
#define MX6Q_PAD_SD4_DAT5__USDHC4_DAT5	MX6Q_PAD_SD4_DAT5__USDHC4_DAT5_50MHZ
#define MX6Q_PAD_SD4_DAT6__USDHC4_DAT6	MX6Q_PAD_SD4_DAT6__USDHC4_DAT6_50MHZ
#define MX6Q_PAD_SD4_DAT7__USDHC4_DAT7	MX6Q_PAD_SD4_DAT7__USDHC4_DAT7_50MHZ


#define MX6DL_USDHC_PAD_CTRL_22KPU_40OHM_50MHZ	MX6Q_USDHC_PAD_CTRL_22KPU_40OHM_50MHZ
#define MX6DL_USDHC_PAD_CTRL_50MHZ	MX6DL_USDHC_PAD_CTRL
#define MX6DL_PAD_SD4_CLK__USDHC4_CLK	MX6DL_PAD_SD4_CLK__USDHC4_CLK_50MHZ
#define MX6DL_PAD_SD4_CMD__USDHC4_CMD	MX6DL_PAD_SD4_CMD__USDHC4_CMD_50MHZ
#define MX6DL_PAD_SD4_DAT0__USDHC4_DAT0	MX6DL_PAD_SD4_DAT0__USDHC4_DAT0_50MHZ
#define MX6DL_PAD_SD4_DAT1__USDHC4_DAT1	MX6DL_PAD_SD4_DAT1__USDHC4_DAT1_50MHZ
#define MX6DL_PAD_SD4_DAT2__USDHC4_DAT2	MX6DL_PAD_SD4_DAT2__USDHC4_DAT2_50MHZ
#define MX6DL_PAD_SD4_DAT3__USDHC4_DAT3	MX6DL_PAD_SD4_DAT3__USDHC4_DAT3_50MHZ
#define MX6DL_PAD_SD4_DAT4__USDHC4_DAT4	MX6DL_PAD_SD4_DAT4__USDHC4_DAT4_50MHZ
#define MX6DL_PAD_SD4_DAT5__USDHC4_DAT5	MX6DL_PAD_SD4_DAT5__USDHC4_DAT5_50MHZ
#define MX6DL_PAD_SD4_DAT6__USDHC4_DAT6	MX6DL_PAD_SD4_DAT6__USDHC4_DAT6_50MHZ
#define MX6DL_PAD_SD4_DAT7__USDHC4_DAT7	MX6DL_PAD_SD4_DAT7__USDHC4_DAT7_50MHZ

#define NP(id, pin, pad_ctl) \
	NEW_PAD_CTRL(MX6PAD(SD##id##_##pin##__USDHC##id##_##pin), MX6(pad_ctl))

#define SD_PINS(id, pad_ctl) \
	NP(id, CLK, pad_ctl),	\
	NP(id, CMD, pad_ctl),	\
	NP(id, DAT0, pad_ctl),	\
	NP(id, DAT1, pad_ctl),	\
	NP(id, DAT2, pad_ctl),	\
	NP(id, DAT3, pad_ctl)

#define SD_PINS8(id, pad_ctl) \
	SD_PINS(id, pad_ctl), \
	NP(id, DAT4, pad_ctl),	\
	NP(id, DAT5, pad_ctl),	\
	NP(id, DAT6, pad_ctl),	\
	NP(id, DAT7, pad_ctl)

/* Pull/keeper disabled, or with PAD_CTL_PKE to enable */
#define NOPULL (PAD_CTL_DSE_240ohm | PAD_CTL_SPEED_LOW)
#define WEAK_IRQ (PAD_CTL_PKE | PAD_CTL_PUE | PAD_CTL_PUS_100K_UP | PAD_CTL_DSE_240ohm | PAD_CTL_SPEED_LOW | PAD_CTL_HYS)

#define WEAK_PULLDN (PAD_CTL_PKE | PAD_CTL_PUE | PAD_CTL_PUS_100K_DOWN | PAD_CTL_DSE_240ohm | PAD_CTL_SPEED_LOW)
#define WEAK_PULLUP (PAD_CTL_PKE | PAD_CTL_PUE | PAD_CTL_PUS_100K_UP | PAD_CTL_DSE_240ohm | PAD_CTL_SPEED_LOW)
#define PULLUP_22K (PAD_CTL_PKE | PAD_CTL_PUE | PAD_CTL_PUS_22K_UP | PAD_CTL_DSE_240ohm | PAD_CTL_SPEED_LOW)

#define UART_PAD_CTRL (PAD_CTL_HYS | PAD_CTL_PUS_100K_UP | PAD_CTL_PKE | PAD_CTL_PUE | PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm| PAD_CTL_SRE_FAST)

static iomux_v3_cfg_t MX6NAME(common_pads)[] = {
	/* Audio - USB modem */
	MX6PAD(CSI0_DAT4__AUDMUX_AUD3_TXC),
	MX6PAD(CSI0_DAT5__AUDMUX_AUD3_TXD),
	MX6PAD(CSI0_DAT6__AUDMUX_AUD3_TXFS),
	MX6PAD(CSI0_DAT7__AUDMUX_AUD3_RXD),

	/* ecspi1 - SPI NOR */
	MX6PAD(EIM_D16__ECSPI1_SCLK),
	MX6PAD(EIM_D17__ECSPI1_MISO),
	MX6PAD(EIM_D18__ECSPI1_MOSI),
	NEW_PAD_CTRL(MX6PAD(EIM_D19__GPIO_3_19), NOPULL),		/*SS1*/

	/* Ethernet - ENET */
	MX6PAD(ENET_MDIO__ENET_MDIO),
	MX6PAD(ENET_MDC__ENET_MDC),
	MX6PAD(RGMII_TXC__ENET_RGMII_TXC),
	MX6PAD(RGMII_TD0__ENET_RGMII_TD0),
	MX6PAD(RGMII_TD1__ENET_RGMII_TD1),
	MX6PAD(RGMII_TD2__ENET_RGMII_TD2),
	MX6PAD(RGMII_TD3__ENET_RGMII_TD3),
	MX6PAD(RGMII_TX_CTL__ENET_RGMII_TX_CTL),
	MX6PAD(ENET_REF_CLK__ENET_TX_CLK),
	MX6PAD(RGMII_RXC__ENET_RGMII_RXC),
	MX6PAD(RGMII_RD0__ENET_RGMII_RD0),
	MX6PAD(RGMII_RD1__ENET_RGMII_RD1),
	MX6PAD(RGMII_RD2__ENET_RGMII_RD2),
	MX6PAD(RGMII_RD3__ENET_RGMII_RD3),
	MX6PAD(RGMII_RX_CTL__ENET_RGMII_RX_CTL),
	NEW_PAD_CTRL(MX6PAD(ENET_RXD0__GPIO_1_27), NOPULL),		/* Micrel Phy - Reset */
	NEW_PAD_CTRL(MX6PAD(ENET_TX_EN__GPIO_1_28), WEAK_IRQ),		/* Micrel Phy - Interrupt */

	/* flexcan1 - TJA1040T */
	MX6PAD(KEY_ROW2__CAN1_RXCAN),
	MX6PAD(KEY_COL2__CAN1_TXCAN),
	MX6PAD(GPIO_2__GPIO_1_2),		/* STNDBY */

	/* gpio1 */
	NEW_PAD_CTRL(MX6PAD(GPIO_3__GPIO_1_3), WEAK_PULLUP),	/* RX_ACT led */
	NEW_PAD_CTRL(MX6PAD(GPIO_4__GPIO_1_4), WEAK_PULLUP),	/* TX_ACT led */

	/* gpio2 */
	NEW_PAD_CTRL(MX6PAD(NANDF_D5__GPIO_2_5), WEAK_PULLUP),	/* Modem On/Off */
	NEW_PAD_CTRL(MX6PAD(NANDF_D6__GPIO_2_6), PULLUP_22K),	/* Modem Reset */
	NEW_PAD_CTRL(MX6PAD(NANDF_D7__GPIO_2_7), WEAK_PULLUP),	/* Modem Sleep stat */
	NEW_PAD_CTRL(MX6PAD(EIM_A19__GPIO_2_19), WEAK_PULLDN),	/* Led 4 */
	NEW_PAD_CTRL(MX6PAD(EIM_A18__GPIO_2_20), WEAK_PULLDN),	/* Led 3 */
	NEW_PAD_CTRL(MX6PAD(EIM_A17__GPIO_2_21), WEAK_PULLDN),	/* Led 2 */
	NEW_PAD_CTRL(MX6PAD(EIM_A16__GPIO_2_22), WEAK_PULLDN),	/* Led 1 */
	NEW_PAD_CTRL(MX6PAD(EIM_OE__GPIO_2_25), WEAK_PULLUP),	/* USB ASIX ethernet reset */
	NEW_PAD_CTRL(MX6PAD(EIM_LBA__GPIO_2_27), WEAK_PULLUP),	/* S1:4 - Factory Default Switch */

	/* gpio4 */
	NEW_PAD_CTRL(MX6PAD(GPIO_19__GPIO_4_5), WEAK_PULLUP),	/* S1:1 - Loopback request switch */
	NEW_PAD_CTRL(MX6PAD(KEY_COL0__GPIO_4_6), WEAK_PULLUP),	/* Factory default button */
	NEW_PAD_CTRL(MX6PAD(KEY_ROW0__GPIO_4_7), WEAK_PULLUP),	/* S1:2 - Diagnostic Switch 1 */
	NEW_PAD_CTRL(MX6PAD(KEY_COL1__GPIO_4_8), WEAK_PULLUP),	/* S1:3 - Diagnostic Switch 2 */

	/* gpio5 */
	NEW_PAD_CTRL(MX6PAD(CSI0_DAT9__GPIO_5_27), WEAK_PULLUP), /* Sim Card Detect */

	/* gpio6 */
	NEW_PAD_CTRL(MX6PAD(EIM_A23__GPIO_6_6), WEAK_PULLDN),	/* Led 5 */
	NEW_PAD_CTRL(MX6PAD(NANDF_WP_B__GPIO_6_9), WEAK_PULLDN),	/* Modem Wakeup Out */
	NEW_PAD_CTRL(MX6PAD(NANDF_RB0__GPIO_6_10), WEAK_PULLDN),	/* Modem Wakeup In */

	/* UART1  */
	NEW_PAD_CTRL(MX6PAD(SD3_DAT7__UART1_TXD), UART_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(SD3_DAT6__UART1_RXD), UART_PAD_CTRL),

	/* UART2/console */
	NEW_PAD_CTRL(MX6PAD(EIM_D26__UART2_TXD), UART_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(EIM_D27__UART2_RXD), UART_PAD_CTRL),

	/* UART3 for RS485/RS232 */
	NEW_PAD_CTRL(MX6PAD(EIM_D24__UART3_TXD), UART_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(EIM_D25__UART3_RXD), UART_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(EIM_A22__GPIO_2_16), WEAK_PULLDN),	/* RS485 RX Enable */
	NEW_PAD_CTRL(MX6PAD(EIM_A21__GPIO_2_17), WEAK_PULLDN),	/* RS485 TX Enable */
	NEW_PAD_CTRL(MX6PAD(EIM_A20__GPIO_2_18), WEAK_PULLDN),	/* RS485/RS232 Select */
	NEW_PAD_CTRL(MX6PAD(GPIO_18__GPIO_7_13), WEAK_PULLDN),	/* RS485 Loopback enable */

	/* UART4 for modem diagnostics */
	NEW_PAD_CTRL(MX6PAD(CSI0_DAT12__UART4_TXD), UART_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(CSI0_DAT13__UART4_RXD), UART_PAD_CTRL),

	/* USBOTG  */
	MX6PAD(GPIO_1__USBOTG_ID),
	MX6PAD(KEY_COL4__USBOH3_USBOTG_OC),
	NEW_PAD_CTRL(MX6PAD(EIM_D22__GPIO_3_22), WEAK_PULLUP),		/* usbotg power */

	/* USDHC4 - eMMC */
	SD_PINS8(4, USDHC_PAD_CTRL_50MHZ),
	NEW_PAD_CTRL(MX6PAD(NANDF_D0__GPIO_2_0), WEAK_PULLUP),		/* eMMC reset (rev 1) */
	NEW_PAD_CTRL(MX6PAD(EIM_CS1__GPIO_2_24), WEAK_PULLUP),		/* eMMC reset (rev 0) */
	0
};

#define MX6_USDHC_PAD_SETTING8(id, speed, pad_ctl)	\
		MX6NAME(sd##id##_##speed##mhz)[] = { SD_PINS8(id, pad_ctl), 0 }

static iomux_v3_cfg_t MX6_USDHC_PAD_SETTING8(4, 50, USDHC_PAD_CTRL_50MHZ);
static iomux_v3_cfg_t MX6_USDHC_PAD_SETTING8(4, 100, USDHC_PAD_CTRL_100MHZ);
static iomux_v3_cfg_t MX6_USDHC_PAD_SETTING8(4, 200, USDHC_PAD_CTRL_200MHZ);

#define _50MHZ 0
#define _100MHZ 1
#define _200MHZ 2
#define SD_SPEED_CNT 3
static iomux_v3_cfg_t * MX6NAME(sd_pads)[] =
{
	MX6NAME(sd4_50mhz),
	MX6NAME(sd4_100mhz),
	MX6NAME(sd4_200mhz),
};
